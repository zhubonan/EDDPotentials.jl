# This is a basic workflow to help you get started with Actions

name: Testing

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on: [push, pull_request]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    - name: Setup Julia environment
      uses: julia-actions/setup-julia@v1
      with:
        version: '1'
 
    - name: Setup Miniconda
      uses: conda-incubator/setup-miniconda@v2.2.0
      with:
        activate-environment: "airss"

    - name: Install AIRSS
      shell: bash -el {0}
      run: |
        conda activate airss
        conda install -c conda-forge airss-with-default-names==0.9.3

    - name: Setup the project environment (using latest CellBase)
      run: julia --project -e 'using Pkg; Pkg.add(url="https://github.com/zhubonan/CellBase.jl"); Pkg.instantiate()'

    - name: run test 
      shell: bash -el {0}
      run: |
        conda activate airss
        julia --project -e 'using Pkg; Pkg.test("EDDPotentials", coverage=true)'
    - name: Upload coverage
      env: 
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      run: |
        julia -e 'using Pkg;Pkg.add("Coverage")'
        julia -e 'using Coverage;Codecov.submit_local(process_folder())'

    - name: run test with threading
      shell: bash -el {0}
      run: |
        conda activate airss
        julia --project -e 'using Pkg; Pkg.test("EDDPotentials", coverage=true)'
      env: 
        JULIA_NUM_THREADS: 2
    - name: Upload coverage
      env: 
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      run: |
        julia -e 'using Pkg;Pkg.add("Coverage")'
        julia -e 'using Coverage;Codecov.submit_local(process_folder())'
